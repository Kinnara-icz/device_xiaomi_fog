# Copyright (c) 2012-2013, 2016-2020, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of The Linux Foundation nor
#       the names of its contributors may be used to endorse or promote
#       products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

on init
    # Setup permission for Power HAL
    chown system system /dev/stune/top-app/schedtune.boost
    chown system system /dev/cpu_dma_latency

    chmod 0664 /dev/stune/top-app/schedtune.boost
    chmod 0664 /dev/cpu_dma_latency

    write /dev/stune/foreground/schedtune.sched_boost_no_override 1
    write /dev/stune/top-app/schedtune.sched_boost_no_override 1
    write /dev/stune/schedtune.colocate 0
    write /dev/stune/background/schedtune.colocate 0
    write /dev/stune/system-background/schedtune.colocate 0
    write /dev/stune/foreground/schedtune.colocate 0
    write /dev/stune/top-app/schedtune.colocate 1
    #Moving to init as this is needed for qseecomd
    wait /dev/block/platform/soc/${ro.boot.bootdevice}
    symlink /dev/block/platform/soc/${ro.boot.bootdevice} /dev/block/bootdevice
    start vendor.qseecomd

# report max frequency to unity tasks.
    write /proc/sys/kernel/sched_lib_name "com.miHoYo., com.activision., com.epicgames, com.dts., UnityMain, libunity.so, libil2cpp.so, libmain.so, libcri_vip_unity.so, libopus.so, libxlua.so, libUE4.so, libAsphalt9.so, libnative-lib.so, libRiotGamesApi.so, libResources.so, libagame.so, libapp.so, libflutter.so, libMSDKCore.so, libFIFAMobileNeon.so, libUnreal.so, libEOSSDK.so, libcocos2dcpp.so, libfb.so"
    write /proc/sys/kernel/sched_lib_mask_force 255

on enable-low-power
    # Enable PowerHAL hint processing
    setprop vendor.powerhal.init 1

on property:sys.boot_completed=1
    trigger enable-low-power

on fs
    start hwservicemanager
    mount_all /vendor/etc/fstab.qcom --early
    chown root system /mnt/vendor/persist
    chmod 0771 /mnt/vendor/persist
    restorecon_recursive /mnt/vendor/persist
    mkdir /mnt/vendor/persist/data 0700 system system
    mount ext4 /dev/block/bootdevice/by-name/rescue /mnt/rescue noatime
    restorecon_recursive /mnt/rescue

on late-fs
    mount_all /vendor/etc/fstab.qcom --late

# load exfat driver
    insmod /vendor/lib/modules/exfat.ko

# USB controller configuration
    setprop vendor.usb.rndis.func.name "gsi"
    setprop vendor.usb.rmnet.func.name "gsi"
    setprop vendor.usb.rmnet.inst.name "rmnet"
    setprop vendor.usb.dpl.inst.name "dpl"
    setprop vendor.usb.qdss.inst.name "qdss"
    setprop vendor.usb.controller 4e00000.dwc3
    start mi_thermald
    start vendor.sensors

on boot && property:persist.vendor.usb.controller.default=*
    setprop vendor.usb.controller ${persist.vendor.usb.controller.default}

on property:vendor.usb.controller=*
    setprop sys.usb.controller ${vendor.usb.controller}

    # Load WLAN driver
    insmod /vendor/lib/modules/

on init
    # Xiaomi Thermal Profiles permissions
    chmod 0664 /sys/class/thermal/thermal_message/sconfig
    chown system system /sys/class/thermal/thermal_message/sconfig
    chmod 0666 /sys/class/thermal/thermal_message/temp_state
    chown system system /sys/class/thermal/thermal_message/temp_state

on post-fs-data
    mkdir /vendor/data/tombstones 0771 system system
    mkdir /data/vendor/silead 0777 system system
    mkdir /data/vendor/thermal 0771 root system
    mkdir /data/vendor/thermal/config 0771 root system
    mkdir /data/vendor/wlan_logs 0770 system wifi

on boot
# camera duacal calibration
     mkdir /mnt/vendor/persist/camera
     chown root system /mnt/vendor/persist/camera
     chmod 0666 /data/vendor/camera/com.xiaomi.dcal.wd.data
     chmod 0777 /mnt/vendor/persist/camera
     chmod 0644 /mnt/vendor/persist/camera/rear_dc_cal_wd.bin
     chmod 0644 /mnt/vendor/persist/camera/rear_dc_cal_wu.bin

    # M376 add for saving files of TP selftest
    mkdir /data/vendor/touchpad
    chown system system /data/vendor/touchpad
    chmod 0775 /data/vendor/touchpad

    # M376 add for cit lcdtest
    chmod 0666 /sys/class/backlight/panel0-backlight/brightness
    chmod 0666 /sys/class/drm/card0-DSI-1/disp_param

    # For proximity sensor
    chmod 0644 /dev/elliptic0
    chmod 0644 /dev/elliptic1

on charger
    start vendor.power_off_alarm
    setprop vendor.usb.controller 4e00000.dwc3
    setprop sys.usb.configfs 1
    start mi_thermald

service mi_thermald /system/vendor/bin/mi_thermald
    class main
    user root
    group system
    seclabel u:r:mi_thermald:s0

    # Enable suspend to RAM
    write /sys/power/mem_sleep "deep"
    # Set zRAM swappiness to 60 for all variants
    write /proc/sys/vm/swappiness 60
    # Mount swap partitions specified in fstab
    swapon_all fstab.zram
